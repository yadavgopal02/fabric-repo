name: Fabric API Call

on:
  pull_request:
    types: [opened, ready_for_review]
    
  push:
    branches:
      - dev
    path:
      - deploy/**
    paths-ignore:
      - .github/**
      - dest/**

jobs:
  create_pr:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Open PR for new branch
        if: github.event_name == 'push' && github.ref_type == 'branch'
        run: |
          # Extract branch name from ref
          branch=$(echo "${{ github.ref }}" | awk -F'/' '{print $3}')
          
          # Open a PR using GitHub API
          curl -X POST \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${{ github.repository }}/pulls \
            -d '{
              "title": "Automated PR for branch '"$branch"'",
              "body": "Automatically generated pull request for branch '"$branch"'",
              "head": "'"$branch"'",
              "base": "main"
            }'  
  
  add-reviews:
    runs-on: ubuntu-latest
    needs: create_pr
    steps:
      - uses: kentaro-m/auto-assign-action@v2.0.0
        with:
          configuration-path: ".github/workflows/configs.yml"  
       
          
  Dev-Migration:
    runs-on: ubuntu-latest
    needs: add-reviews
    steps:
    
      
    - uses: trstringer/manual-approval@v1
      with:
        secret: ${{ github.TOKEN }}
        approvers: yadavgopal02
        minimum-approvals: 1
        issue-title: "Deploying Staging to Dev"
        issue-body: "Please approve or deny the deployment of version v1"
        exclude-workflow-initiator-as-approver: false
        additional-approved-words: ''
        additional-denied-words: ''

    
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Azure Login
      env:
        AZURE_USERNAME: ${{ secrets.AZURE_USERNAME }}
        AZURE_PASSWORD: ${{ secrets.AZURE_PASSWORD }}
        ACTIONS_ALLOW_UNSECURE_COMMANDS: true
      run: |
        az login --username $AZURE_USERNAME --password $AZURE_PASSWORD
        
        echo "::set-env name=AZURE_ACCESS_TOKEN::$(az account get-access-token --resource "https://api.fabric.microsoft.com" --query "accessToken" -o tsv)"
        echo "Access Token: ${{ env.AZURE_ACCESS_TOKEN }}"

    - name: Print Access Token
      run: |
        echo "${{ steps.access_token.outputs.token }}"

    - name: Use Access Token in Workflow
      run: |
        echo "Access Token: ${{ env.AZURE_ACCESS_TOKEN }}"
      
    - name: Get changed files
      id: changed-files
      uses: tj-actions/changed-files@v33
      
    - name: Make API Call
      env:
        ID_TOKEN: ${{ secrets.MYID_TOKEN }}
   
      run: |

        for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
        
        stackfile=$(echo $file | cut -f2 -d'/')
        parameter_value=$(cat deploy/$stackfile)
        curl --location 'https://api.fabric.microsoft.com/v1/workspaces/029ea194-7a2f-492e-8fa9-d1e471195c57/notebooks' \
        --header 'Content-Type: application/json' \
        --header 'Host: graph.microsoft.com' \
        --header 'Authorization: Bearer ${{ env.AZURE_ACCESS_TOKEN }}' \
        --data "$parameter_value"
        done

    - name: Manual Approval
      if: github.ref == 'refs/heads/main'
      uses: octokit/request-action@v2.x
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        pull_request_number: ${{ github.event.pull_request.number }}
        check_interval_seconds: 300 # Check every 5 minutes
          
  Prod-Migration:
    runs-on: ubuntu-latest
    needs: Dev-Migration
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
    - uses: trstringer/manual-approval@v1
      with:
        secret: ${{ github.TOKEN }}
        approvers: yadavgopal02
        minimum-approvals: 1
        issue-title: "Deploying Dev to production"
        issue-body: "Please approve or deny the deployment of version v1"
        exclude-workflow-initiator-as-approver: false
        additional-approved-words: ' '
        additional-denied-words: ''
        
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Azure Login
      env:
        AZURE_USERNAME: ${{ secrets.AZURE_USERNAME }}
        AZURE_PASSWORD: ${{ secrets.AZURE_PASSWORD }}
        ACTIONS_ALLOW_UNSECURE_COMMANDS: true
      run: |
        az login --username $AZURE_USERNAME --password $AZURE_PASSWORD
        
        echo "::set-env name=AZURE_ACCESS_TOKEN::$(az account get-access-token --resource "https://api.fabric.microsoft.com" --query "accessToken" -o tsv)"
        echo "Access Token: ${{ env.AZURE_ACCESS_TOKEN }}"

    - name: Print Access Token
      run: |
        echo "${{ steps.access_token.outputs.token }}"

    - name: Use Access Token in Workflow
      run: |
        echo "Access Token: ${{ env.AZURE_ACCESS_TOKEN }}"
      
    - name: Get changed files
      id: changed-files
      uses: tj-actions/changed-files@v33
      
    - name: Make API Call
      env:
        ID_TOKEN: ${{ secrets.MYID_TOKEN }}
   
      run: |

        for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
        
        stackfile=$(echo $file | cut -f2 -d'/')
        parameter_value=$(cat deploy/$stackfile)
        curl --location 'https://api.fabric.microsoft.com/v1/workspaces/654d6099-5fef-4a37-90b2-c07d16f3f88a/notebooks' \
        --header 'Content-Type: application/json' \
        --header 'Host: graph.microsoft.com' \
        --header 'Authorization: Bearer ${{ env.AZURE_ACCESS_TOKEN }}' \
        --data "$parameter_value"
        done		
